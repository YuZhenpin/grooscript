plugins {
    id "com.moowork.node" version "0.8"
    id "com.moowork.gulp" version "0.1"
    id "com.bmuschko.nexus" version "2.2"
    id "org.asciidoctor.convert" version "1.5.2"
}

apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'codenarc'

sourceCompatibility = 1.6

version = '1.0.0-SNAPSHOT'
group = 'org.grooscript'

ext {
    appName = 'grooscript'
    groovyVersion = '2.3.9'
}

repositories {
    mavenCentral()
}

codenarc.configFile = new File('config/codenarc.groovy')
[codenarcMain, codenarcTest]*.ignoreFailures = true

dependencies {
    compile "org.codehaus.groovy:groovy:${groovyVersion}"
    compile "org.codehaus.groovy:groovy-json:${groovyVersion}"
    runtime 'org.apache.ivy:ivy:2.3.0'
    compile('org.codehaus.gpars:gpars:1.2.1') {
        exclude module: 'groovy-all'
    }
    testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude module: 'groovy-all'
        exclude module: 'junit-dep'
    }
    testCompile "org.codehaus.groovy:groovy-test:${groovyVersion}"
    codenarc('org.codenarc:CodeNarc:0.22')
}

jar {
    manifest {
        attributes("Implementation-Title": appName, "Implementation-Version": version)
    }
    exclude 'META-INF/resources/**/grooscript-b*.js',
            'META-INF/resources/**/test*.js',
            'META-INF/resources/**/obser*.js',
            'META-INF/resources/**/gQ*.js'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

modifyPom {
    project {
        name 'Grooscript'
        description 'Grooscript converts your groovy code to javascript'
        url 'http://grooscript.org/'
        inceptionYear '2012'

        scm {
            url 'scm:git@github.com:chiquitinxx/grooscript.git'
            connection 'scm:git@github.com:chiquitinxx/grooscript.git'
            developerConnection 'scm:git@github.com:chiquitinxx/grooscript.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'chiquitinxx'
                name 'Jorge Franco'
                email 'jorge.franco.leza@gmail.com'
            }
        }
    }
}

task testUnit(type: Test) {
    exclude 'org/grooscript/asts/TestPhantom*'
    exclude 'org/grooscript/daemon/**'
    exclude 'org/grooscript/jquery/TestFunctional*'
    exclude 'org/grooscript/builder/TestFunctional*'
    exclude 'org/grooscript/GrooScriptSpec*'
    exclude 'org/grooscript/convert/TestFiles*'
    exclude 'org/grooscript/doc/**'
    exclude 'org/grooscript/rx/TestFunctional*'
}

testUnit.description = 'Run only conversion tests'

compileJava.dependsOn gulp_compress
test.dependsOn gulp_tests

node {
    // Version of node to use.
    version = '0.11.10'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")
}

asciidoctor {
    sourceDir = project.file 'doc'
    sources { include 'doc.adoc' }
    attributes 'grooscript-version': '1.0-SNAPSHOT',
        author: 'Jorge Franco',
        email: 'grooscript@gmail.com',
        'source-highlighter': 'prettify',
        toc: 'right',
        toclevels: 2,
        icons: 'font',
        'index-file': 'index.html'

}
