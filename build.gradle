plugins {
    id "com.moowork.node" version "0.10"
    id "com.moowork.gulp" version "0.10"
    id "com.bmuschko.nexus" version "2.3.1"
    id "org.asciidoctor.convert" version "1.5.2"
    id "net.saliman.cobertura" version "2.2.6"
    id "com.github.kt3k.coveralls" version "2.3.1"
    id "com.github.hierynomus.license" version "0.11.0"
}

apply plugin: 'idea'
apply plugin: 'groovy'
apply from: "$rootDir/gradle/node.gradle"
apply from: "$rootDir/gradle/release.gradle"

def compatibilityVersion = 1.6
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

version = '1.2.2-SNAPSHOT'
group = 'org.grooscript'

ext {
    groovyVersion = '2.4.5'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.codehaus.groovy:groovy:${groovyVersion}"
    compile "org.codehaus.groovy:groovy-json:${groovyVersion}"
    runtime 'org.apache.ivy:ivy:2.4.0'
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude module: 'groovy-all'
        exclude module: 'junit-dep'
    }
    testCompile 'cglib:cglib-nodep:3.1'
    testCompile "org.codehaus.groovy:groovy-test:${groovyVersion}"
}

cobertura.coverageFormats = ['html', 'xml']
cobertura.coverageSourceDirs = sourceSets.main.groovy.srcDirs

jar {
    manifest {
        attributes("Implementation-Title": rootProject.name, "Implementation-Version": version)
    }
    exclude 'META-INF/resources/**/grooscript-b*.js',
            'META-INF/resources/**/test*.js',
            'META-INF/resources/**/obser*.js',
            'META-INF/resources/**/gQ*.js'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

task generateGrooscriptToolsFile(type: JavaExec) {
    description 'Generate grooscript-tools.js'

    // Set main property to name of Groovy script class.
    main = 'org.grooscript.GenerateGrooscripTools'

    // Set classpath for running the Groovy script.
    classpath = sourceSets.main.runtimeClasspath
}

task testUnit(type: Test) {
    exclude 'org/grooscript/asts/TestPhantom*'
    exclude 'org/grooscript/daemon/**'
    exclude 'org/grooscript/jquery/TestFunctional*'
    exclude 'org/grooscript/builder/TestFunctional*'
    exclude 'org/grooscript/GrooScriptSpec*'
    exclude 'org/grooscript/convert/TestFiles*'
    exclude 'org/grooscript/rx/TestFunctional*'
}

testUnit.description = 'Run only unit tests'

compileJava.dependsOn gulp_compress
test.dependsOn generateGrooscriptToolsFile, gulp_tests, gulp_test_require, licenseMain, licenseTest

asciidoctor {
    sourceDir = project.file 'doc'
    sources { include 'doc.adoc' }
    attributes 'grooscript-version': version,
        author: 'Jorge Franco',
        email: 'grooscript@gmail.com',
        'source-highlighter': 'prettify',
        toc: 'right',
        toclevels: 2,
        icons: 'font',
        'index-file': 'index.html'
}

license {
    header = file('LICENSE.txt')
    include "**/*.groovy"
    includes(["**/*.java", "**/grooscript.js"])
}
